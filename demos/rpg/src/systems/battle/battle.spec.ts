import { describe, expect, it } from 'bun:test';
import { characterTemplateToCharacter } from './character';
import type { Character, CharacterTemplate } from './types';

describe('Battle Spec', () => {
  const ignisrexTemplate = (alligence: Character['alligence']) =>
    ({
      id: 'player-1',
      name: 'Ignisrex',
      alligence,
      level: 100,
      evolutionStage: 'ultimate',
      stats: {
        maxHp: 1873,
        currentHp: 1873,
        maxSp: 254,
        currentSp: 254,
        maxEnergy: 40,
        currentEnergy: 0,
        shield: 0,
        attack: 1053,
        defense: 1173,
        taunt: 125,
        speed: 104,
        action: 100,
        stun: 0,
        toughness: 150,
        criticalChance: 0.195,
        criticalDamage: 1.551,
        breakEffectiveness: 2.094,
        breakResistance: 0,
        healingBoost: 0,
        damageBoost: 0,
        damageReduction: 0,
        effectHitChance: 0,
        effectResistance: 0.18,
      },
      elementalStats: {
        physical: {
          damageBoost: 0,
          resistance: 0,
          penetration: 0,
          breakEffectiveness: 0,
          breakResistance: 0,
        },
        fire: {
          damageBoost: 0,
          resistance: 0,
          penetration: 0,
          breakEffectiveness: 0,
          breakResistance: 0,
        },
        ice: {
          damageBoost: 0,
          resistance: 0,
          penetration: 0,
          breakEffectiveness: 0,
          breakResistance: 0,
        },
        lightning: {
          damageBoost: 0,
          resistance: 0,
          penetration: 0,
          breakEffectiveness: 0,
          breakResistance: 0,
        },
        earth: {
          damageBoost: 0,
          resistance: 0,
          penetration: 0,
          breakEffectiveness: 0,
          breakResistance: 0,
        },
        wind: {
          damageBoost: 0,
          resistance: 0,
          penetration: 0,
          breakEffectiveness: 0,
          breakResistance: 0,
        },
        light: {
          damageBoost: 0,
          resistance: 0,
          penetration: 0,
          breakEffectiveness: 0,
          breakResistance: 0,
        },
        dark: {
          damageBoost: 0,
          resistance: 0,
          penetration: 0,
          breakEffectiveness: 0,
          breakResistance: 0,
        },
      },
      effects: [],
      skills: ['CORE.ATTACK', 'ULTIMATE.IGNISREX'],
      statModifications: [
        {
          source: 'plugins',
          stat: 'maxHp',
          type: 'add',
          change: 1433,
        },
        {
          source: 'plugins',
          stat: 'attack',
          type: 'add',
          change: 1427,
        },
        {
          source: 'plugins',
          stat: 'defense',
          type: 'add',
          change: 91,
        },
        {
          source: 'plugins',
          stat: 'speed',
          type: 'add',
          change: 51,
        },
      ],
      elementModifications: [],
    }) satisfies CharacterTemplate;

  const characters = [
    characterTemplateToCharacter(ignisrexTemplate('party')),
    characterTemplateToCharacter(ignisrexTemplate('enemy')),
  ];

  it('should be able to start a battle', () => {
    expect(characters[0].calculated.stats).not.toBe(characters[0].inital.stats);
    expect(characters[0].calculated.stats).toEqual({
      maxHp: 3306,
      currentHp: 3306,
      maxSp: 254,
      currentSp: 254,
      maxEnergy: 40,
      currentEnergy: 0,
      shield: 0,
      attack: 2480,
      defense: 1264,
      taunt: 125,
      speed: 155,
      action: expect.closeTo(64.516),
      stun: 0,
      toughness: 150,
      criticalChance: 0.195,
      criticalDamage: 1.551,
      breakEffectiveness: 2.094,
      breakResistance: 0,
      healingBoost: 0,
      damageBoost: 0,
      damageReduction: 0,
      effectHitChance: 0,
      effectResistance: 0.18,
    });

    expect(characters[0].calculated.elementalStats).not.toBe(characters[0].inital.elementalStats);
    expect(characters[0].calculated.elementalStats).toEqual({
      physical: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      fire: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      ice: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      lightning: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      earth: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      wind: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      light: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      dark: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
    });

    expect(characters[1].calculated.stats).not.toBe(characters[1].inital.stats);
    expect(characters[1].calculated.stats).toEqual({
      maxHp: 3306,
      currentHp: 3306,
      maxSp: 254,
      currentSp: 254,
      maxEnergy: 40,
      currentEnergy: 0,
      shield: 0,
      attack: 2480,
      defense: 1264,
      taunt: 125,
      speed: 155,
      action: expect.closeTo(64.516),
      stun: 0,
      toughness: 150,
      criticalChance: 0.195,
      criticalDamage: 1.551,
      breakEffectiveness: 2.094,
      breakResistance: 0,
      healingBoost: 0,
      damageBoost: 0,
      damageReduction: 0,
      effectHitChance: 0,
      effectResistance: 0.18,
    });
    expect(characters[1].calculated.elementalStats).not.toBe(characters[1].inital.elementalStats);
    expect(characters[1].calculated.elementalStats).toEqual({
      physical: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      fire: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      ice: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      lightning: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      earth: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      wind: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      light: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
      dark: {
        damageBoost: 0,
        resistance: 0,
        penetration: 0,
        breakEffectiveness: 0,
        breakResistance: 0,
      },
    });
  });
});
